from stix.coa import CourseOfAction
from stix.core import STIXPackage
from stix.exploit_target import ExploitTarget
from stix.exploit_target.configuration import Configuration
from stix.exploit_target.vulnerability import CVSSVector, Vulnerability
from stix.exploit_target.weakness import Weakness

# Exploit Target 1
et1 = ExploitTarget(title='Apache HTTP Vulnerability - CVE-2018-1312')
et1.description = ('In Apache httpd 2.2.0 to 2.4.29, when generating an HTTP Digest authentication challenge, '
                   'the nonce sent to prevent reply attacks was not correctly generated using a pseudo-random seed.'
                   'In a cluster of servers using a common Digest authentication configuration, '
                   'HTTP requests could be replayed across servers by an attacker without detection.')
et1.short_description = 'Apache httpd 2.2.0 to 2.4.29 is vulnerable'

# Exploit Target 1 - Weakness
weakness = Weakness(cwe_id='CWE-287', description='Improper Authentication')
et1.add_weakness(weakness)

# Exploit Target 1 - Configuration
config = Configuration(cce_id='CCE-27686-5', description='The Apache web server be run with the appropriate privileges.',
                       short_description='Configuration Short Description')
et1.add_configuration(config)

# Exploit Target 1 - Vulnerability
vuln = Vulnerability()
vuln.cve_id = 'CVE-2018-1312'
cvss = CVSSVector()
cvss.base_score = '6.8'
cvss.base_vector = 'AV:N/AC:M/Au:N/C:P/I:P/A:P'
vuln.cvss_score = cvss
vuln.add_reference('https://nvd.nist.gov/vuln/detail/CVE-2018-1312')
et1.add_vulnerability(vuln)

# Exploit Target 1 - Potential COA
coa = CourseOfAction(title='Patch Apache httpd')
et1.potential_coas.append(CourseOfAction(idref=coa.id_))

# Exploit Target 2 - Related to Exploit Target 1
et2 = ExploitTarget(title='Apache HTTP Vulnerability - CVE-2018-1333')
et1.related_exploit_targets.append(ExploitTarget(idref=et2.id_))

# Generate STIX Package
stix_package = STIXPackage()
stix_package.add_exploit_target(et1)
stix_package.add_course_of_action(coa)
stix_package.add_exploit_target(et2)

print(stix_package.to_xml().decode())
